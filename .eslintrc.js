module.exports = {
    env: {
        'jest/globals': true,
        browser: true,
        es6: true,
        jest: true,
        node: true,
    },
    extends: [
        'plugin:import/recommended',
        'airbnb',
        'eslint:recommended',
        'plugin:jest/recommended',
        'react-app',
        'prettier',
    ],
    globals: {
        document: true,
        shallow: true,
        sinon: true,
        window: true,
    },
    parser: 'babel-eslint',
    parserOptions: {
        ecmaFeatures: {
            experimentalDecorators: true,
            jsx: true,
        },
        ecmaVersion: 2018,
        sourceType: 'module',
    },
    plugins: ['babel', 'import', 'jsx-a11y', 'jest', 'react', 'react-hooks'],
    rules: {
        // TODO: determine error level
        'dot-notation': 1,
        'import/no-unresolved': 1,
        'jest/valid-expect': 1,
        'jsx-a11y/click-events-have-key-events': 1,
        'jsx-a11y/control-has-associated-label': 1,
        'jsx-a11y/no-static-element-interactions': 1,
        'lines-between-class-members': 1,
        'no-nested-ternary': 1,
        'no-prototype-builtins': 1,
        'no-return-assign': 1,
        'no-return-await': 1,
        'no-unneeded-ternary': 1,
        'no-useless-return': 1,
        'object-shorthand': 1,
        'prefer-const': 1,
        'prefer-destructuring': 1,
        'prefer-promise-reject-errors': 1,
        'prefer-template': 1,
        'react/destructuring-assignment': 1,
        'react/jsx-curly-newline': 1,
        'react/jsx-fragments': 1,
        'react/jsx-wrap-multilines': 1,
        'react/no-array-index-key': 1,
        'react/prop-types': 1,
        'react/state-in-constructor': 1,
        'spaced-comment': 1,
        'vars-on-top': 1,
        // end TODO: determine error level
        // TODO: fix or disable lines then make error
        camelcase: 1,
        'import/extensions': 1,
        'no-var': 1,
        radix: 1,
        // end TODO: fix or disable lines then make error
        'arrow-body-style': 'off',
        'arrow-parens': 'off',
        'function-paren-newline': 'off',
        'implicit-arrow-linebreak': 'off',
        'import/no-cycle': 'off',
        'key-spacing': 'off',
        'no-else-return': 'off',
        'no-param-reassign': 'off',
        'no-shadow': 'off',
        'object-curly-newline': 'off',
        'react/jsx-props-no-spreading': 'off',
        'react/jsx-closing-tag-location': 'off',
        'react/jsx-one-expression-per-line': 'off',
        'react/static-property-placement': 'off',
        'consistent-return': 'warn',
        'func-names': 0,
        'import/no-extraneous-dependencies': [
            'error',
            {
                devDependencies: true,
            },
        ],
        'import/prefer-default-export': 'off',
        'no-console': 'warn',
        'no-template-curly-in-string': 'off',
        'no-undef': 'warn',
        'no-underscore-dangle': 0,
        'no-use-before-define': 'warn',
        'operator-linebreak': ['warn', 'after', { overrides: { '?': 'before', ':': 'before' } }],
        'prefer-rest-params': 'warn',
        'react/forbid-prop-types': 'off',
        'react/jsx-filename-extension': [
            1,
            {
                extensions: ['.js', '.jsx'],
            },
        ],
        'react/jsx-indent': [2, 4],
        'react/jsx-indent-props': [2, 4],
        'react/no-deprecated': 'error',
        'react/no-unused-state': 'warn',
        'react/no-unused-prop-types': 'warn',
        'react/sort-comp': [
            'error',
            {
                order: [
                    'type-annotations',
                    'static-methods',
                    'static-variables',
                    'instance-variables',
                    'lifecycle',
                    // '/^on.+$/',
                    'everything-else',
                    'render',
                ],
            },
        ],
        semi: 2,
        'space-before-function-paren': [
            'error',
            {
                anonymous: 'never',
                asyncArrow: 'ignore',
                named: 'never',
            },
        ],
        'valid-jsdoc': [
            'warn',
            {
                prefer: {
                    returns: 'return',
                    yield: 'yields',
                },
                preferType: {
                    Boolean: 'boolean',
                    Number: 'number',
                    String: 'string',
                    array: 'Array',
                    function: 'Function',
                    object: 'Object',
                },
                requireParamDescription: false,
                requireReturn: false,
                requireReturnDescription: false,
            },
        ],
    },
    settings: {
        'import/resolver': {
            alias: {
                map: [['pep-comp', './src']],
            },
            node: {
                moduleDirectory: ['./src', './node_modules'],
            },
        },
    },
};
